version: '3.6'
services:
  telegraf:
    image: telegraf:latest
    restart: always
    volumes:
      - ./telegraf/etc/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
      - influxdb
    links:
      - influxdb
    ports:
      - '8125:8125/udp'

  influxdb:
    image: influxdb:1.8
    restart: always
    environment:
      INFLUXDB_DB: influx
      INFLUXDB_ADMIN_USER: admin
      INFLUXDB_ADMIN_PASSWORD: admin
    ports:
      - '8086:8086'
    volumes:
      - ./influxdb_data:/var/lib/influxdb'

  grafana:
    image: grafana/grafana:latest
    restart: always
    depends_on:
      - influxdb
    env_file: configuration.env
    links:
      - influxdb
    ports:
      - '3000:3000'
    volumes:
      - ./grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/

  mongodb:
    image: mongo:latest
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - ./mongo-data:/data/db
    ports:
      - '27017:27017'

  express-app:
    restart: always
    build:
      context: ./node-example
      dockerfile: Dockerfile
    depends_on:
      - mongodb
    ports:
      - '9000:9000'

  nginx:
    restart: always
    image: nginx:1-alpine
    ports:
      - '9001:80'
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - express-app

  elasticsearch:
    image: elasticsearch:8.14.3
    ports:
      - '9200:9200'
      - '9300:9300'
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
